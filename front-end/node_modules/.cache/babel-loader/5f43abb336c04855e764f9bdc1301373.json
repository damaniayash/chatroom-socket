{"ast":null,"code":"var _jsxFileName = \"/Users/yashdamania/Downloads/webSocket-App-main/front-end/src/LoginSignup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./LoginSignup.css\";\nimport UserContext from \"./UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginSignup() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    setLoggedInUser\n  } = useContext(UserContext);\n  const [isLogin, setIsLogin] = useState(true);\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const validatePassword = pass => {\n    if (pass.length < 6) {\n      return \"Password should be at least 6 characters.\";\n    }\n\n    if (!/[A-Z]/.test(pass)) {\n      return \"Password should contain at least one uppercase letter.\";\n    }\n\n    return \"\";\n  };\n\n  const handleLoginSignup = async e => {\n    e.preventDefault();\n    setError(\"\");\n\n    if (!isLogin) {\n      const passwordError = validatePassword(password);\n\n      if (passwordError) {\n        setError(passwordError);\n        return;\n      }\n    }\n\n    const endpoint = isLogin ? \"/login\" : \"/signup\";\n    const payload = isLogin ? {\n      email,\n      password\n    } : {\n      name,\n      email,\n      password\n    };\n    const response = await fetch(`http://localhost:5001${endpoint}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    });\n    const data = await response.json();\n    console.log(data); // UI error handling\n\n    if (!response.ok) {\n      setError(data.message || \"An error occurred. Please try again.\");\n      return;\n    }\n\n    if (isLogin) {\n      // Store the username for the active user. Here, I'm using localStorage.\n      console.log(email);\n      fetch(`http://localhost:5000/get-username`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: email\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n        localStorage.setItem(\"activeUserName\", String(data.name));\n        localStorage.setItem(\"activeUserId\", data.id);\n        setLoggedInUser({\n          id: data.id,\n          name: data.name,\n          email: email\n        });\n      });\n      localStorage.setItem(\"activeUserEmail\", email); // Navigate to the Chatroom page\n\n      navigate(\"/chatroom\");\n    } else {\n      // Alert the user about successful signup\n      alert(\"Sign up was successful. You can now log in.\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLoginSignup,\n      children: [!isLogin && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isLogin ? \"Login\" : \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsLogin(!isLogin),\n      children: isLogin ? \"Switch to Sign Up\" : \"Switch to Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginSignup, \"rNk6wujXLd1wfgJQoojhrgpOvbk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginSignup;\nexport default LoginSignup;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginSignup\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","UserContext","LoginSignup","navigate","setLoggedInUser","isLogin","setIsLogin","email","setEmail","name","setName","password","setPassword","error","setError","validatePassword","pass","length","test","handleLoginSignup","e","preventDefault","passwordError","endpoint","payload","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","ok","message","then","res","localStorage","setItem","String","id","alert","target","value"],"sources":["/Users/yashdamania/Downloads/webSocket-App-main/front-end/src/LoginSignup.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./LoginSignup.css\";\nimport UserContext from \"./UserContext\";\n\nfunction LoginSignup() {\n  const navigate = useNavigate();\n  const { setLoggedInUser } = useContext(UserContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const validatePassword = (pass) => {\n    if (pass.length < 6) {\n      return \"Password should be at least 6 characters.\";\n    }\n    if (!/[A-Z]/.test(pass)) {\n      return \"Password should contain at least one uppercase letter.\";\n    }\n    return \"\";\n  };\n\n  const handleLoginSignup = async (e) => {\n    e.preventDefault();\n\n    setError(\"\");\n\n    if (!isLogin) {\n      const passwordError = validatePassword(password);\n      if (passwordError) {\n        setError(passwordError);\n        return;\n      }\n    }\n\n    const endpoint = isLogin ? \"/login\" : \"/signup\";\n    const payload = isLogin\n      ? {\n          email,\n          password,\n        }\n      : {\n          name,\n          email,\n          password,\n        };\n\n    const response = await fetch(`http://localhost:5001${endpoint}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(payload),\n    });\n\n    const data = await response.json();\n    console.log(data);\n\n    // UI error handling\n    if (!response.ok) {\n      setError(data.message || \"An error occurred. Please try again.\");\n      return;\n    }\n\n    if (isLogin) {\n      // Store the username for the active user. Here, I'm using localStorage.\n      console.log(email);\n      fetch(`http://localhost:5000/get-username`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email: email }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data);\n          localStorage.setItem(\"activeUserName\", String(data.name));\n          localStorage.setItem(\"activeUserId\", data.id);\n          setLoggedInUser({\n            id: data.id,\n            name: data.name,\n            email: email,\n          });\n        });\n      localStorage.setItem(\"activeUserEmail\", email);\n\n      // Navigate to the Chatroom page\n      navigate(\"/chatroom\");\n    } else {\n      // Alert the user about successful signup\n      alert(\"Sign up was successful. You can now log in.\");\n    }\n  };\n\n  return (\n    <div className=\"login-signup-container\">\n      <h2>{isLogin ? \"Login\" : \"Sign Up\"}</h2>\n      <form onSubmit={handleLoginSignup}>\n        {!isLogin && (\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        )}\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n        <button type=\"submit\">{isLogin ? \"Login\" : \"Sign Up\"}</button>\n      </form>\n      {error && <p className=\"error\">{error}</p>}\n      <button onClick={() => setIsLogin(!isLogin)}>\n        {isLogin ? \"Switch to Sign Up\" : \"Switch to Login\"}\n      </button>\n    </div>\n  );\n}\n\nexport default LoginSignup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}