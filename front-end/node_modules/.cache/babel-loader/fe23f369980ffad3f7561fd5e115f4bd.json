{"ast":null,"code":"var _jsxFileName = \"/Users/yashdamania/Downloads/webSocket-App-main/front-end/src/components/WebSocketCall.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport UserContext from \"../UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WebSocketCall(_ref) {\n  _s();\n\n  let {\n    socket\n  } = _ref;\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const user = useContext(UserContext);\n\n  const handleText = e => {\n    const inputMessage = e.target.value;\n    setMessage(inputMessage);\n  };\n\n  const handleSubmit = () => {\n    if (!message) {\n      return;\n    }\n\n    socket.emit(\"data\", {\n      message,\n      user\n    });\n    setMessage(\"\");\n  };\n\n  const handleVote = (id, action) => {\n    // Find the message in the state and update its votes locally\n    const updatedMessages = messages.map(msg => {\n      if (msg.ulid === id) {\n        if (action === \"upvote\") {\n          return { ...msg,\n            upvotes: msg.upvotes + 1\n          };\n        } else if (action === \"downvote\") {\n          return { ...msg,\n            downvotes: msg.downvotes + 1\n          };\n        }\n      }\n\n      return msg;\n    });\n    setMessages(updatedMessages); // Emit the vote action to the server\n\n    socket.emit(\"data\", {\n      action,\n      id\n    });\n  };\n\n  useEffect(() => {\n    socket.on(\"data\", data => {\n      console.log('data', data);\n      setMessages([...messages, data]);\n    });\n    return () => {\n      socket.off(\"data\", () => {\n        console.log(\"data event was removed\");\n      });\n    };\n  }, [socket, messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"WebSocket Communication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: handleText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((msg, ind) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [msg.user, \": \", msg.message, \" :: \", msg.id]\n      }, ind, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WebSocketCall, \"1owsgf/qCrsx6lQeINQdQv1laX0=\");\n\n_c = WebSocketCall;\n\nvar _c;\n\n$RefreshReg$(_c, \"WebSocketCall\");","map":{"version":3,"names":["useContext","useEffect","useState","UserContext","WebSocketCall","socket","message","setMessage","messages","setMessages","user","handleText","e","inputMessage","target","value","handleSubmit","emit","handleVote","id","action","updatedMessages","map","msg","ulid","upvotes","downvotes","on","data","console","log","off","ind"],"sources":["/Users/yashdamania/Downloads/webSocket-App-main/front-end/src/components/WebSocketCall.jsx"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport UserContext from \"../UserContext\";\n\nexport default function WebSocketCall({ socket }) {\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const user = useContext(UserContext)\n\n  const handleText = (e) => {\n    const inputMessage = e.target.value;\n    setMessage(inputMessage);\n  };\n\n  const handleSubmit = () => {\n    if (!message) {\n      return;\n    }\n    socket.emit(\"data\", { message, user,});\n    setMessage(\"\");\n  };\n\n  const handleVote = (id, action) => {\n    // Find the message in the state and update its votes locally\n    const updatedMessages = messages.map((msg) => {\n      if (msg.ulid === id) {\n        if (action === \"upvote\") {\n          return { ...msg, upvotes: msg.upvotes + 1 };\n        } else if (action === \"downvote\") {\n          return { ...msg, downvotes: msg.downvotes + 1 };\n        }\n      }\n      return msg;\n    });\n\n    setMessages(updatedMessages);\n\n    // Emit the vote action to the server\n    socket.emit(\"data\", { action, id });\n  };\n\n\n\n  useEffect(() => {\n\n    socket.on(\"data\", (data) => {\n      console.log('data',data)\n      setMessages([...messages, data]);\n    });\n\n\n    return () => {\n      socket.off(\"data\", () => {\n        console.log(\"data event was removed\");\n      });\n\n    };\n  }, [socket, messages]);\n\n  return (\n    <div>\n      <h2>WebSocket Communication</h2>\n      <input type=\"text\" value={message} onChange={handleText} />\n      <button onClick={handleSubmit}>submit</button>\n      <ul>\n        {messages.map((msg, ind) => (\n          <li key={ind}>\n            {msg.user}: {msg.message} :: {msg.id}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,eAAe,SAASC,aAAT,OAAmC;EAAA;;EAAA,IAAZ;IAAEC;EAAF,CAAY;EAChD,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAMQ,IAAI,GAAGV,UAAU,CAACG,WAAD,CAAvB;;EAEA,MAAMQ,UAAU,GAAIC,CAAD,IAAO;IACxB,MAAMC,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA9B;IACAR,UAAU,CAACM,YAAD,CAAV;EACD,CAHD;;EAKA,MAAMG,YAAY,GAAG,MAAM;IACzB,IAAI,CAACV,OAAL,EAAc;MACZ;IACD;;IACDD,MAAM,CAACY,IAAP,CAAY,MAAZ,EAAoB;MAAEX,OAAF;MAAWI;IAAX,CAApB;IACAH,UAAU,CAAC,EAAD,CAAV;EACD,CAND;;EAQA,MAAMW,UAAU,GAAG,CAACC,EAAD,EAAKC,MAAL,KAAgB;IACjC;IACA,MAAMC,eAAe,GAAGb,QAAQ,CAACc,GAAT,CAAcC,GAAD,IAAS;MAC5C,IAAIA,GAAG,CAACC,IAAJ,KAAaL,EAAjB,EAAqB;QACnB,IAAIC,MAAM,KAAK,QAAf,EAAyB;UACvB,OAAO,EAAE,GAAGG,GAAL;YAAUE,OAAO,EAAEF,GAAG,CAACE,OAAJ,GAAc;UAAjC,CAAP;QACD,CAFD,MAEO,IAAIL,MAAM,KAAK,UAAf,EAA2B;UAChC,OAAO,EAAE,GAAGG,GAAL;YAAUG,SAAS,EAAEH,GAAG,CAACG,SAAJ,GAAgB;UAArC,CAAP;QACD;MACF;;MACD,OAAOH,GAAP;IACD,CATuB,CAAxB;IAWAd,WAAW,CAACY,eAAD,CAAX,CAbiC,CAejC;;IACAhB,MAAM,CAACY,IAAP,CAAY,MAAZ,EAAoB;MAAEG,MAAF;MAAUD;IAAV,CAApB;EACD,CAjBD;;EAqBAlB,SAAS,CAAC,MAAM;IAEdI,MAAM,CAACsB,EAAP,CAAU,MAAV,EAAmBC,IAAD,IAAU;MAC1BC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBF,IAAnB;MACAnB,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcoB,IAAd,CAAD,CAAX;IACD,CAHD;IAMA,OAAO,MAAM;MACXvB,MAAM,CAAC0B,GAAP,CAAW,MAAX,EAAmB,MAAM;QACvBF,OAAO,CAACC,GAAR,CAAY,wBAAZ;MACD,CAFD;IAID,CALD;EAMD,CAdQ,EAcN,CAACzB,MAAD,EAASG,QAAT,CAdM,CAAT;EAgBA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,IAAI,EAAC,MAAZ;MAAmB,KAAK,EAAEF,OAA1B;MAAmC,QAAQ,EAAEK;IAA7C;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAEK,YAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA,UACGR,QAAQ,CAACc,GAAT,CAAa,CAACC,GAAD,EAAMS,GAAN,kBACZ;QAAA,WACGT,GAAG,CAACb,IADP,QACea,GAAG,CAACjB,OADnB,UACgCiB,GAAG,CAACJ,EADpC;MAAA,GAASa,GAAT;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GArEuB5B,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}